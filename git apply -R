[1mdiff --git a/javascript/app.js b/javascript/app.js[m
[1mindex e8ae0aa..430426a 100644[m
[1m--- a/javascript/app.js[m
[1m+++ b/javascript/app.js[m
[36m@@ -2,13 +2,6 @@[m [mvar fTemp = null;[m
 var lat = null;[m
 var long = null;[m
 [m
[31m-// Insert API Key if needed (not needed for spitcast)[m
[31m-var APIKey = "";[m
[31m-// Insert URL of API[m
[31m-var queryURL = "http://api.spitcast.com/api/spot-forecast/search";[m
[31m-[m
[31m-// Create AJAX call[m
[31m-[m
 function findConditions (id) {[m
     $.ajax({[m
         url: `http://api.spitcast.com/api/spot/forecast/${id}/`,[m
[36m@@ -22,14 +15,22 @@[m [mfunction findConditions (id) {[m
 }[m
 [m
 function findDistance (place) {[m
[32m+[m[32m    $.ajax({[m
[32m+[m[32m        url: "https://api.opencagedata.com/geocode/v1/json?q=riverside%2C%20california&key=b0359f420459420d8b88c3125472360e&language=en&pretty=1",[m
[32m+[m[32m        method: "GET"[m
[32m+[m[32m    }).then(function(response) {[m
[32m+[m[32m        let userLatitude = response.results[0].geometry.lat[m
[32m+[m[32m        let userLongitude = response.results[0].geometry.Lng[m
[32m+[m[32m    })[m
     let placeLatitude = place[0];[m
     let placeLongitude = place[1];[m
[31m-    console.log(placeLatitude, placeLongitude)[m
[32m+[m[32m    console.log("user " + userLatitude, userLongitude)[m
[32m+[m[32m    console.log("place " + placeLatitude, placeLongitude)[m
 }[m
 [m
 function findNearSpots () {[m
     $.ajax({[m
[31m-        url: queryURL,[m
[32m+[m[32m        url: "http://api.spitcast.com/api/spot-forecast/search",[m
         method: "GET"[m
         }).then(function(response) {[m
             console.log(response);[m
